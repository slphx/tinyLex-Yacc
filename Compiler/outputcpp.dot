digraph SyntaxTree {
	node [shape = box];
	1	[label = "translation-unit"];
	2	[label = "translation-unit"];
	3	[label = "external-declaration"];
	1	->	2;
	1	->	3;
	4	[label = "external-declaration"];
	2	->	4;
	5	[label = "function-definition"];
	4	->	5;
	6	[label = "declaration-specifiers"];
	7	[label = "declarator"];
	8	[label = "compound-statement"];
	5	->	6;
	5	->	7;
	5	->	8;
	9	[label = "type-specifier"];
	6	->	9;
	10	[label = "char"];
	9	->	10;
	11	[label = "direct-declarator"];
	7	->	11;
	12	[label = "direct-declarator"];
	13	[label = "("];
	14	[label = "parameter-type-list"];
	15	[label = ")"];
	11	->	12;
	11	->	13;
	11	->	14;
	11	->	15;
	16	[label = "myfunction"];
	12	->	16;
	17	[label = "parameter-list"];
	14	->	17;
	18	[label = "parameter-declaration"];
	17	->	18;
	19	[label = "declaration-specifiers"];
	20	[label = "declarator"];
	18	->	19;
	18	->	20;
	21	[label = "type-specifier"];
	19	->	21;
	22	[label = "int"];
	21	->	22;
	23	[label = "direct-declarator"];
	20	->	23;
	24	[label = "a"];
	23	->	24;
	25	[label = "{"];
	26	[label = "statement-list"];
	27	[label = "}"];
	8	->	25;
	8	->	26;
	8	->	27;
	28	[label = "statement"];
	26	->	28;
	29	[label = "jump-statement"];
	28	->	29;
	30	[label = "return"];
	31	[label = "expression"];
	32	[label = ";"];
	29	->	30;
	29	->	31;
	29	->	32;
	33	[label = "assignment-expression"];
	31	->	33;
	34	[label = "conditional-expression"];
	33	->	34;
	35	[label = "logical-OR-expression"];
	34	->	35;
	36	[label = "logical-AND-expression"];
	35	->	36;
	37	[label = "inclusive-OR-expression"];
	36	->	37;
	38	[label = "exclusive-OR-expression"];
	37	->	38;
	39	[label = "AND-expression"];
	38	->	39;
	40	[label = "equality-expression"];
	39	->	40;
	41	[label = "relational-expression"];
	40	->	41;
	42	[label = "shift-expression"];
	41	->	42;
	43	[label = "additive-expression"];
	42	->	43;
	44	[label = "additive-expression"];
	45	[label = "+"];
	46	[label = "multiplicative-expression"];
	43	->	44;
	43	->	45;
	43	->	46;
	47	[label = "multiplicative-expression"];
	44	->	47;
	48	[label = "cast-expression"];
	47	->	48;
	49	[label = "unary-expression"];
	48	->	49;
	50	[label = "postfix-expression"];
	49	->	50;
	51	[label = "primary-expression"];
	50	->	51;
	52	[label = "a"];
	51	->	52;
	53	[label = "cast-expression"];
	46	->	53;
	54	[label = "unary-expression"];
	53	->	54;
	55	[label = "postfix-expression"];
	54	->	55;
	56	[label = "primary-expression"];
	55	->	56;
	57	[label = "'0'"];
	56	->	57;
	58	[label = "function-definition"];
	3	->	58;
	59	[label = "declaration-specifiers"];
	60	[label = "declarator"];
	61	[label = "compound-statement"];
	58	->	59;
	58	->	60;
	58	->	61;
	62	[label = "type-specifier"];
	59	->	62;
	63	[label = "int"];
	62	->	63;
	64	[label = "direct-declarator"];
	60	->	64;
	65	[label = "direct-declarator"];
	66	[label = "("];
	67	[label = "parameter-type-list"];
	68	[label = ")"];
	64	->	65;
	64	->	66;
	64	->	67;
	64	->	68;
	69	[label = "main"];
	65	->	69;
	70	[label = "parameter-list"];
	67	->	70;
	71	[label = "parameter-list"];
	72	[label = ","];
	73	[label = "parameter-declaration"];
	70	->	71;
	70	->	72;
	70	->	73;
	74	[label = "parameter-declaration"];
	71	->	74;
	75	[label = "declaration-specifiers"];
	76	[label = "declarator"];
	74	->	75;
	74	->	76;
	77	[label = "type-specifier"];
	75	->	77;
	78	[label = "int"];
	77	->	78;
	79	[label = "direct-declarator"];
	76	->	79;
	80	[label = "arg"];
	79	->	80;
	81	[label = "declaration-specifiers"];
	82	[label = "declarator"];
	73	->	81;
	73	->	82;
	83	[label = "type-specifier"];
	81	->	83;
	84	[label = "char"];
	83	->	84;
	85	[label = "pointer"];
	86	[label = "direct-declarator"];
	82	->	85;
	82	->	86;
	87	[label = "*"];
	85	->	87;
	88	[label = "direct-declarator"];
	89	[label = "["];
	90	[label = "]"];
	86	->	88;
	86	->	89;
	86	->	90;
	91	[label = "argv"];
	88	->	91;
	92	[label = "{"];
	93	[label = "declaration-list"];
	94	[label = "statement-list"];
	95	[label = "}"];
	61	->	92;
	61	->	93;
	61	->	94;
	61	->	95;
	96	[label = "declaration-list"];
	97	[label = "declaration"];
	93	->	96;
	93	->	97;
	98	[label = "declaration-list"];
	99	[label = "declaration"];
	96	->	98;
	96	->	99;
	100	[label = "declaration"];
	98	->	100;
	101	[label = "declaration-specifiers"];
	102	[label = "init-declarator-list"];
	103	[label = ";"];
	100	->	101;
	100	->	102;
	100	->	103;
	104	[label = "type-specifier"];
	101	->	104;
	105	[label = "int"];
	104	->	105;
	106	[label = "init-declarator"];
	102	->	106;
	107	[label = "declarator"];
	108	[label = "="];
	109	[label = "initializer"];
	106	->	107;
	106	->	108;
	106	->	109;
	110	[label = "direct-declarator"];
	107	->	110;
	111	[label = "integer"];
	110	->	111;
	112	[label = "assignment-expression"];
	109	->	112;
	113	[label = "conditional-expression"];
	112	->	113;
	114	[label = "logical-OR-expression"];
	113	->	114;
	115	[label = "logical-AND-expression"];
	114	->	115;
	116	[label = "inclusive-OR-expression"];
	115	->	116;
	117	[label = "exclusive-OR-expression"];
	116	->	117;
	118	[label = "AND-expression"];
	117	->	118;
	119	[label = "equality-expression"];
	118	->	119;
	120	[label = "relational-expression"];
	119	->	120;
	121	[label = "shift-expression"];
	120	->	121;
	122	[label = "additive-expression"];
	121	->	122;
	123	[label = "multiplicative-expression"];
	122	->	123;
	124	[label = "cast-expression"];
	123	->	124;
	125	[label = "unary-expression"];
	124	->	125;
	126	[label = "postfix-expression"];
	125	->	126;
	127	[label = "primary-expression"];
	126	->	127;
	128	[label = "0"];
	127	->	128;
	129	[label = "declaration-specifiers"];
	130	[label = "init-declarator-list"];
	131	[label = ";"];
	99	->	129;
	99	->	130;
	99	->	131;
	132	[label = "type-specifier"];
	129	->	132;
	133	[label = "typedef-name"];
	132	->	133;
	134	[label = "bool"];
	133	->	134;
	135	[label = "init-declarator"];
	130	->	135;
	136	[label = "declarator"];
	137	[label = "="];
	138	[label = "initializer"];
	135	->	136;
	135	->	137;
	135	->	138;
	139	[label = "direct-declarator"];
	136	->	139;
	140	[label = "notend"];
	139	->	140;
	141	[label = "assignment-expression"];
	138	->	141;
	142	[label = "conditional-expression"];
	141	->	142;
	143	[label = "logical-OR-expression"];
	142	->	143;
	144	[label = "logical-AND-expression"];
	143	->	144;
	145	[label = "inclusive-OR-expression"];
	144	->	145;
	146	[label = "exclusive-OR-expression"];
	145	->	146;
	147	[label = "AND-expression"];
	146	->	147;
	148	[label = "equality-expression"];
	147	->	148;
	149	[label = "relational-expression"];
	148	->	149;
	150	[label = "shift-expression"];
	149	->	150;
	151	[label = "additive-expression"];
	150	->	151;
	152	[label = "multiplicative-expression"];
	151	->	152;
	153	[label = "cast-expression"];
	152	->	153;
	154	[label = "unary-expression"];
	153	->	154;
	155	[label = "postfix-expression"];
	154	->	155;
	156	[label = "primary-expression"];
	155	->	156;
	157	[label = "true"];
	156	->	157;
	158	[label = "declaration-specifiers"];
	159	[label = "init-declarator-list"];
	160	[label = ";"];
	97	->	158;
	97	->	159;
	97	->	160;
	161	[label = "type-specifier"];
	158	->	161;
	162	[label = "char"];
	161	->	162;
	163	[label = "init-declarator"];
	159	->	163;
	164	[label = "declarator"];
	163	->	164;
	165	[label = "direct-declarator"];
	164	->	165;
	166	[label = "direct-declarator"];
	167	[label = "["];
	168	[label = "assignment-expression"];
	169	[label = "]"];
	165	->	166;
	165	->	167;
	165	->	168;
	165	->	169;
	170	[label = "mystring"];
	166	->	170;
	171	[label = "conditional-expression"];
	168	->	171;
	172	[label = "logical-OR-expression"];
	171	->	172;
	173	[label = "logical-AND-expression"];
	172	->	173;
	174	[label = "inclusive-OR-expression"];
	173	->	174;
	175	[label = "exclusive-OR-expression"];
	174	->	175;
	176	[label = "AND-expression"];
	175	->	176;
	177	[label = "equality-expression"];
	176	->	177;
	178	[label = "relational-expression"];
	177	->	178;
	179	[label = "shift-expression"];
	178	->	179;
	180	[label = "additive-expression"];
	179	->	180;
	181	[label = "multiplicative-expression"];
	180	->	181;
	182	[label = "cast-expression"];
	181	->	182;
	183	[label = "unary-expression"];
	182	->	183;
	184	[label = "postfix-expression"];
	183	->	184;
	185	[label = "primary-expression"];
	184	->	185;
	186	[label = "10"];
	185	->	186;
	187	[label = "statement"];
	94	->	187;
	188	[label = "iteration-statement"];
	187	->	188;
	189	[label = "while"];
	190	[label = "("];
	191	[label = "expression"];
	192	[label = ")"];
	193	[label = "statement"];
	188	->	189;
	188	->	190;
	188	->	191;
	188	->	192;
	188	->	193;
	194	[label = "assignment-expression"];
	191	->	194;
	195	[label = "conditional-expression"];
	194	->	195;
	196	[label = "logical-OR-expression"];
	195	->	196;
	197	[label = "logical-AND-expression"];
	196	->	197;
	198	[label = "inclusive-OR-expression"];
	197	->	198;
	199	[label = "exclusive-OR-expression"];
	198	->	199;
	200	[label = "AND-expression"];
	199	->	200;
	201	[label = "equality-expression"];
	200	->	201;
	202	[label = "relational-expression"];
	201	->	202;
	203	[label = "shift-expression"];
	202	->	203;
	204	[label = "additive-expression"];
	203	->	204;
	205	[label = "multiplicative-expression"];
	204	->	205;
	206	[label = "cast-expression"];
	205	->	206;
	207	[label = "unary-expression"];
	206	->	207;
	208	[label = "postfix-expression"];
	207	->	208;
	209	[label = "primary-expression"];
	208	->	209;
	210	[label = "notend"];
	209	->	210;
	211	[label = "compound-statement"];
	193	->	211;
	212	[label = "{"];
	213	[label = "statement-list"];
	214	[label = "}"];
	211	->	212;
	211	->	213;
	211	->	214;
	215	[label = "statement-list"];
	216	[label = "statement"];
	213	->	215;
	213	->	216;
	217	[label = "statement"];
	215	->	217;
	218	[label = "expression-statement"];
	217	->	218;
	219	[label = "expression"];
	220	[label = ";"];
	218	->	219;
	218	->	220;
	221	[label = "assignment-expression"];
	219	->	221;
	222	[label = "unary-expression"];
	223	[label = "assignment-operator"];
	224	[label = "assignment-expression"];
	221	->	222;
	221	->	223;
	221	->	224;
	225	[label = "postfix-expression"];
	222	->	225;
	226	[label = "postfix-expression"];
	227	[label = "["];
	228	[label = "expression"];
	229	[label = "]"];
	225	->	226;
	225	->	227;
	225	->	228;
	225	->	229;
	230	[label = "primary-expression"];
	226	->	230;
	231	[label = "mystring"];
	230	->	231;
	232	[label = "assignment-expression"];
	228	->	232;
	233	[label = "conditional-expression"];
	232	->	233;
	234	[label = "logical-OR-expression"];
	233	->	234;
	235	[label = "logical-AND-expression"];
	234	->	235;
	236	[label = "inclusive-OR-expression"];
	235	->	236;
	237	[label = "exclusive-OR-expression"];
	236	->	237;
	238	[label = "AND-expression"];
	237	->	238;
	239	[label = "equality-expression"];
	238	->	239;
	240	[label = "relational-expression"];
	239	->	240;
	241	[label = "shift-expression"];
	240	->	241;
	242	[label = "additive-expression"];
	241	->	242;
	243	[label = "multiplicative-expression"];
	242	->	243;
	244	[label = "cast-expression"];
	243	->	244;
	245	[label = "unary-expression"];
	244	->	245;
	246	[label = "postfix-expression"];
	245	->	246;
	247	[label = "primary-expression"];
	246	->	247;
	248	[label = "integer"];
	247	->	248;
	249	[label = "="];
	223	->	249;
	250	[label = "conditional-expression"];
	224	->	250;
	251	[label = "logical-OR-expression"];
	250	->	251;
	252	[label = "logical-AND-expression"];
	251	->	252;
	253	[label = "inclusive-OR-expression"];
	252	->	253;
	254	[label = "exclusive-OR-expression"];
	253	->	254;
	255	[label = "AND-expression"];
	254	->	255;
	256	[label = "equality-expression"];
	255	->	256;
	257	[label = "relational-expression"];
	256	->	257;
	258	[label = "shift-expression"];
	257	->	258;
	259	[label = "additive-expression"];
	258	->	259;
	260	[label = "multiplicative-expression"];
	259	->	260;
	261	[label = "cast-expression"];
	260	->	261;
	262	[label = "unary-expression"];
	261	->	262;
	263	[label = "postfix-expression"];
	262	->	263;
	264	[label = "postfix-expression"];
	265	[label = "("];
	266	[label = "argument-expression-list"];
	267	[label = ")"];
	263	->	264;
	263	->	265;
	263	->	266;
	263	->	267;
	268	[label = "primary-expression"];
	264	->	268;
	269	[label = "myfunction"];
	268	->	269;
	270	[label = "assignment-expression"];
	266	->	270;
	271	[label = "conditional-expression"];
	270	->	271;
	272	[label = "logical-OR-expression"];
	271	->	272;
	273	[label = "logical-AND-expression"];
	272	->	273;
	274	[label = "inclusive-OR-expression"];
	273	->	274;
	275	[label = "exclusive-OR-expression"];
	274	->	275;
	276	[label = "AND-expression"];
	275	->	276;
	277	[label = "equality-expression"];
	276	->	277;
	278	[label = "relational-expression"];
	277	->	278;
	279	[label = "shift-expression"];
	278	->	279;
	280	[label = "additive-expression"];
	279	->	280;
	281	[label = "multiplicative-expression"];
	280	->	281;
	282	[label = "cast-expression"];
	281	->	282;
	283	[label = "unary-expression"];
	282	->	283;
	284	[label = "postfix-expression"];
	283	->	284;
	285	[label = "primary-expression"];
	284	->	285;
	286	[label = "integer"];
	285	->	286;
	287	[label = "selection-statement"];
	216	->	287;
	288	[label = "if"];
	289	[label = "("];
	290	[label = "expression"];
	291	[label = ")"];
	292	[label = "statement"];
	293	[label = "else"];
	294	[label = "statement"];
	287	->	288;
	287	->	289;
	287	->	290;
	287	->	291;
	287	->	292;
	287	->	293;
	287	->	294;
	295	[label = "assignment-expression"];
	290	->	295;
	296	[label = "conditional-expression"];
	295	->	296;
	297	[label = "logical-OR-expression"];
	296	->	297;
	298	[label = "logical-AND-expression"];
	297	->	298;
	299	[label = "inclusive-OR-expression"];
	298	->	299;
	300	[label = "exclusive-OR-expression"];
	299	->	300;
	301	[label = "AND-expression"];
	300	->	301;
	302	[label = "equality-expression"];
	301	->	302;
	303	[label = "relational-expression"];
	302	->	303;
	304	[label = "relational-expression"];
	305	[label = "<"];
	306	[label = "shift-expression"];
	303	->	304;
	303	->	305;
	303	->	306;
	307	[label = "shift-expression"];
	304	->	307;
	308	[label = "additive-expression"];
	307	->	308;
	309	[label = "multiplicative-expression"];
	308	->	309;
	310	[label = "cast-expression"];
	309	->	310;
	311	[label = "unary-expression"];
	310	->	311;
	312	[label = "postfix-expression"];
	311	->	312;
	313	[label = "primary-expression"];
	312	->	313;
	314	[label = "integer"];
	313	->	314;
	315	[label = "additive-expression"];
	306	->	315;
	316	[label = "multiplicative-expression"];
	315	->	316;
	317	[label = "cast-expression"];
	316	->	317;
	318	[label = "unary-expression"];
	317	->	318;
	319	[label = "postfix-expression"];
	318	->	319;
	320	[label = "primary-expression"];
	319	->	320;
	321	[label = "26"];
	320	->	321;
	322	[label = "expression-statement"];
	292	->	322;
	323	[label = "expression"];
	324	[label = ";"];
	322	->	323;
	322	->	324;
	325	[label = "assignment-expression"];
	323	->	325;
	326	[label = "conditional-expression"];
	325	->	326;
	327	[label = "logical-OR-expression"];
	326	->	327;
	328	[label = "logical-AND-expression"];
	327	->	328;
	329	[label = "inclusive-OR-expression"];
	328	->	329;
	330	[label = "exclusive-OR-expression"];
	329	->	330;
	331	[label = "AND-expression"];
	330	->	331;
	332	[label = "equality-expression"];
	331	->	332;
	333	[label = "relational-expression"];
	332	->	333;
	334	[label = "shift-expression"];
	333	->	334;
	335	[label = "additive-expression"];
	334	->	335;
	336	[label = "multiplicative-expression"];
	335	->	336;
	337	[label = "cast-expression"];
	336	->	337;
	338	[label = "unary-expression"];
	337	->	338;
	339	[label = "postfix-expression"];
	338	->	339;
	340	[label = "postfix-expression"];
	341	[label = "++"];
	339	->	340;
	339	->	341;
	342	[label = "primary-expression"];
	340	->	342;
	343	[label = "interger"];
	342	->	343;
	344	[label = "expression-statement"];
	294	->	344;
	345	[label = "expression"];
	346	[label = ";"];
	344	->	345;
	344	->	346;
	347	[label = "assignment-expression"];
	345	->	347;
	348	[label = "unary-expression"];
	349	[label = "assignment-operator"];
	350	[label = "assignment-expression"];
	347	->	348;
	347	->	349;
	347	->	350;
	351	[label = "postfix-expression"];
	348	->	351;
	352	[label = "primary-expression"];
	351	->	352;
	353	[label = "notend"];
	352	->	353;
	354	[label = "="];
	349	->	354;
	355	[label = "conditional-expression"];
	350	->	355;
	356	[label = "logical-OR-expression"];
	355	->	356;
	357	[label = "logical-AND-expression"];
	356	->	357;
	358	[label = "inclusive-OR-expression"];
	357	->	358;
	359	[label = "exclusive-OR-expression"];
	358	->	359;
	360	[label = "AND-expression"];
	359	->	360;
	361	[label = "equality-expression"];
	360	->	361;
	362	[label = "relational-expression"];
	361	->	362;
	363	[label = "shift-expression"];
	362	->	363;
	364	[label = "additive-expression"];
	363	->	364;
	365	[label = "multiplicative-expression"];
	364	->	365;
	366	[label = "cast-expression"];
	365	->	366;
	367	[label = "unary-expression"];
	366	->	367;
	368	[label = "postfix-expression"];
	367	->	368;
	369	[label = "primary-expression"];
	368	->	369;
	370	[label = "false"];
	369	->	370;
}